{"version":3,"file":"static/js/135.ba0b7d41.chunk.js","mappings":"qSAIMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,oGACFL,EAASM,IAAI,sBADX,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAES,MAAOD,KAFa,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAASM,IAAT,iBAAuBQ,IADjB,cACvBP,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRd,EAASM,IAAT,iBAAuBQ,EAAvB,aADQ,cACzBP,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXd,EAASM,IAAT,iBAAuBQ,EAAvB,aADW,cAC5BP,EAD4B,yBAE3BA,EAASC,MAFkB,2CAAH,qD,2HChCjC,EAA0B,8BAA1B,EAAuE,mCAAvE,EAA+H,yCAA/H,EAAgL,4BAAhL,EAAmN,2BAAnN,EAAuP,6B,SC0EvP,EA/DqB,WAAO,IAAD,QACjBS,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBJ,UACrCK,EAAI,oBAAGL,EAASI,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,IAVAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAgBI,GACbY,MAAK,SAAAtB,GACJoB,EAAapB,EACd,IACAuB,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACd,KAECS,EACH,OAAO,cAAGQ,UAAWC,EAAd,2BAET,IAAQC,EACNV,EADMU,MAAOC,EACbX,EADaW,YAAaC,EAC1BZ,EAD0BY,aAAcC,EACxCb,EADwCa,aAAcC,EACtDd,EADsDc,SAAUC,EAChEf,EADgEe,OAElE,OACE,iBAAKP,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAYO,GAAE,UAAErB,EAAYsB,eAAd,QAAyB,IAAxD,sBAGA,iBAAKT,UAAWC,EAAhB,WACE,gBACES,IACEP,EAAW,yCAC2BA,GAClCQ,EAENC,IAAKV,EACLW,MAAM,MACNC,OAAO,SAET,iBAAKd,UAAWC,EAAhB,WACE,0BACGC,EADH,IACW,IAAIa,KAAKX,GAAcY,cADlC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfb,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAASA,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAAO,aAG7D,iBAAKtB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASO,GAAG,OAAOnB,MAAO,CAAEC,KAAMA,GAAQU,UAAWC,EAArD,mBAGA,SAAC,KAAD,CAASO,GAAG,UAAUnB,MAAO,CAAEC,KAAMA,GAAQU,UAAWC,EAAxD,yBAIF,SAAC,KAAD,SAIP,C","sources":["Api/Api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '2797e847effb3f024c7d83afab7f550f';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"wrapperTitle\":\"MovieDetails_wrapperTitle__kxb1f\",\"wrapperDescription\":\"MovieDetails_wrapperDescription__qHiXa\",\"error\":\"MovieDetails_error__uOHXe\",\"link\":\"MovieDetails_link__U+v+7\",\"goBack\":\"MovieDetails_goBack__C8OKE\"};","import { searchMovieById } from 'Api/Api';\nimport { useEffect, useState, useRef } from 'react';\nimport image from 'images/notFound.jpeg';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const refLocation = useRef(location.state?.location);\n  const from = location.state?.from ?? '/';\n  const [movieById, setMovieById] = useState(null);\n  useEffect(() => {\n    searchMovieById(moviesId)\n      .then(response => {\n        setMovieById(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  if (!movieById) {\n    return <p className={css.error}>404 Not Found</p>;\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieById;\n  return (\n    <div className={css.wrapper}>\n      <Link className={css.goBack} to={refLocation.current ?? '/'}>\n        Go back\n      </Link>\n      <div className={css.wrapperTitle}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : image\n          }\n          alt={title}\n          width=\"300\"\n          height=\"400\"\n        />\n        <div className={css.wrapperDescription}>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n        </div>\n      </div>\n      <div className={css.wrapper}>\n        <div className={css.wrapperTitle}>\n          <NavLink to=\"cast\" state={{ from: from }} className={css.link}>\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\" state={{ from: from }} className={css.link}>\n            Reviews\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","get","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","moviesId","useParams","location","useLocation","refLocation","useRef","state","from","useState","movieById","setMovieById","useEffect","then","catch","message","console","log","className","css","title","poster_path","release_date","vote_average","overview","genres","to","current","src","image","alt","width","height","Date","getFullYear","Math","floor","map","genre","name","join"],"sourceRoot":""}