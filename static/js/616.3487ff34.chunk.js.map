{"version":3,"file":"static/js/616.3487ff34.chunk.js","mappings":"8SAEMA,EAAU,mCAEVC,EAAWC,EAAAA,EAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IAAI,qBAAsB,CACxDC,OAAQ,CAAEN,QAAAA,KAFa,cACnBO,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAASI,IAAI,gBAAiB,CACnDC,OAAQ,CAAEN,QAAAA,EAASY,MAAOD,KAFI,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNb,EAASI,IAAT,iBAAuBS,GAAM,CAClDR,OAAQ,CAAEN,QAAAA,KAFiB,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRb,EAASI,IAAT,iBAAuBS,EAAvB,YAAqC,CAC1DR,OAAQ,CAAEN,QAAAA,KAFmB,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXb,EAASI,IAAT,iBAAuBS,EAAvB,YAAqC,CAC1DR,OAAQ,CAAEN,QAAAA,KAFsB,cAC5BO,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,qD,2HChCjC,EAA0B,8BAA1B,EAAuE,mCAAvE,EAA+H,yCAA/H,EAAgL,4BAAhL,EAAmN,2B,SCwEnN,EA7DqB,WAAO,IAAD,QACjBS,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBJ,UACrCK,EAAI,oBAAGL,EAASI,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrC,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,IAVAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAgBI,GACbY,MAAK,SAAAtB,GACJoB,EAAapB,EACd,IACAuB,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACd,KAECS,EACH,OAAO,cAAGQ,UAAWC,EAAd,2BAET,IAAQC,EACNV,EADMU,MAAOC,EACbX,EADaW,YAAaC,EAC1BZ,EAD0BY,aAAcC,EACxCb,EADwCa,aAAcC,EACtDd,EADsDc,SAAUC,EAChEf,EADgEe,OAElE,OACE,iBAAKP,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMO,GAAE,UAAErB,EAAYsB,eAAd,QAAyB,IAAjC,sBACA,iBAAKT,UAAWC,EAAhB,UACGE,GACC,gBACEO,IAAG,yCAAoCP,GACvCQ,IAAKT,EACLU,MAAM,MACNC,OAAO,SAGT,gBAAKH,IAAKI,EAAOH,IAAKT,EAAOU,MAAM,MAAMC,OAAO,SAElD,iBAAKb,UAAWC,EAAhB,WACE,0BACGC,EADH,IACW,IAAIa,KAAKX,GAAcY,cADlC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfb,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAASA,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAAO,aAG7D,iBAAKtB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASO,GAAG,OAAOnB,MAAO,CAAEC,KAAMA,GAAQU,UAAWC,EAArD,mBAGA,SAAC,KAAD,CAASO,GAAG,UAAUnB,MAAO,CAAEC,KAAMA,GAAQU,UAAWC,EAAxD,yBAIF,SAAC,KAAD,SAIP,C","sources":["Api/Api.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '2797e847effb3f024c7d83afab7f550f';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day', {\n    params: { api_key },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { api_key, query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__LI590\",\"wrapperTitle\":\"MovieDetails_wrapperTitle__xfL3G\",\"wrapperDescription\":\"MovieDetails_wrapperDescription__cImc8\",\"error\":\"MovieDetails_error__Pf1oz\",\"link\":\"MovieDetails_link__wv3O1\"};","import { searchMovieById } from 'Api/Api';\nimport { useEffect, useState, useRef } from 'react';\nimport image from 'images/notFound.jpeg';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const refLocation = useRef(location.state?.location);\n  const from = location.state?.from ?? '/';\n  const [movieById, setMovieById] = useState();\n  useEffect(() => {\n    searchMovieById(moviesId)\n      .then(response => {\n        setMovieById(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  if (!movieById) {\n    return <p className={css.error}>404 Not Found</p>;\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieById;\n  return (\n    <div className={css.wrapper}>\n      <Link to={refLocation.current ?? '/'}>Go back</Link>\n      <div className={css.wrapperTitle}>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            width=\"300\"\n            height=\"400\"\n          />\n        ) : (\n          <img src={image} alt={title} width=\"300\" height=\"400\" />\n        )}\n        <div className={css.wrapperDescription}>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n        </div>\n      </div>\n      <div className={css.wrapper}>\n        <div className={css.wrapperTitle}>\n          <NavLink to=\"cast\" state={{ from: from }} className={css.link}>\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\" state={{ from: from }} className={css.link}>\n            Reviews\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api_key","movieApi","axios","baseURL","moviesFetch","get","params","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","moviesId","useParams","location","useLocation","refLocation","useRef","state","from","useState","movieById","setMovieById","useEffect","then","catch","message","console","log","className","css","title","poster_path","release_date","vote_average","overview","genres","to","current","src","alt","width","height","image","Date","getFullYear","Math","floor","map","genre","name","join"],"sourceRoot":""}