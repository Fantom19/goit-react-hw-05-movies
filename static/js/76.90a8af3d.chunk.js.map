{"version":3,"file":"static/js/76.90a8af3d.chunk.js","mappings":"oSAIMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,oGACFL,EAASM,IAAI,sBADX,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAES,MAAOD,KAFa,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAASM,IAAT,iBAAuBQ,IADjB,cACvBP,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRd,EAASM,IAAT,iBAAuBQ,EAAvB,aADQ,cACzBP,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXd,EAASM,IAAT,iBAAuBQ,EAAvB,aADW,cAC5BP,EAD4B,yBAE3BA,EAASC,MAFkB,2CAAH,qD,yGChCjC,EAAuB,mBAAvB,EAAwD,0BAAxD,EAAyF,mB,kBC6CzF,EAxCa,WACX,IAAQS,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAkBE,GACfM,MAAK,YAAe,IAAZH,EAAW,EAAXA,KACPC,EAAQD,EACT,IACAI,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,KAGF,eAAIW,UAAWC,EAAf,SACGT,GACCA,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,KAAMnB,EAAlC,EAAkCA,GAAlC,OACP,gBAAac,UAAWC,EAAxB,WACE,gBACEK,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKH,EACLI,MAAM,MACNC,OAAO,SAET,iBAAKV,UAAWC,EAAhB,WACE,wBAAKI,KACL,yCACA,uBAAIF,SAdCjB,EADF,KAqBhB,C","sources":["Api/Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '2797e847effb3f024c7d83afab7f550f';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"description\":\"Cast_description__uN0VA\",\"item\":\"Cast_item__a0CDL\"};","import { searchMovieByCast } from 'Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport image from 'images/notFound.jpeg';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    searchMovieByCast(moviesId)\n      .then(({ cast }) => {\n        setCast(cast);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  return (\n    <ul className={css.list}>\n      {cast &&\n        cast.map(({ character, profile_path, name, id }) => (\n          <li key={id} className={css.item}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : image\n              }\n              alt={name}\n              width=\"140\"\n              height=\"175\"\n            />\n            <div className={css.description}>\n              <h3>{name}</h3>\n              <h4>Character: </h4>\n              <p>{character}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","get","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","moviesId","useParams","useState","cast","setCast","useEffect","then","catch","message","console","log","className","css","map","character","profile_path","name","src","image","alt","width","height"],"sourceRoot":""}