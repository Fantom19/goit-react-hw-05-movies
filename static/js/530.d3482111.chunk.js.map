{"version":3,"file":"static/js/530.d3482111.chunk.js","mappings":"8SAEMA,EAAU,mCAEVC,EAAWC,EAAAA,EAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IAAI,qBAAsB,CACxDC,OAAQ,CAAEN,QAAAA,KAFa,cACnBO,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAASI,IAAI,gBAAiB,CACnDC,OAAQ,CAAEN,QAAAA,EAASY,MAAOD,KAFI,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNb,EAASI,IAAT,iBAAuBS,GAAM,CAClDR,OAAQ,CAAEN,QAAAA,KAFiB,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRb,EAASI,IAAT,iBAAuBS,EAAvB,YAAqC,CAC1DR,OAAQ,CAAEN,QAAAA,KAFmB,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXb,EAASI,IAAT,iBAAuBS,EAAvB,YAAqC,CAC1DR,OAAQ,CAAEN,QAAAA,KAFsB,cAC5BO,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,qD,2EChCjC,EAAuB,yBAAvB,EAAuD,yBAAvD,EAA+F,iCAA/F,EAA8K,gC,kBCGjKS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,GACCA,EAAOK,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAApB,OACT,eAAaL,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEK,GAAE,kBAAab,GACfc,MAAO,CAAET,SAAAA,GACTE,UAAWC,EAHb,UAKGI,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKL,EACLM,MAAM,MACNC,OAAO,SAGT,gBAAKH,IAAKI,EAAOH,IAAKN,EAAMO,MAAM,MAAMC,OAAO,SAEjD,iBAAMX,UAAWC,EAAjB,SAAmCE,GAAQC,QAhBtCX,EADA,KAuBlB,C,6IC/BD,EAAwB,sBAAxB,EAAuD,uBAAvD,EAA6F,6B,SC6C7F,EAxCe,WACb,OAAsCoB,EAAAA,EAAAA,UAAS,IAA/C,eAAOvB,EAAP,KAAoBwB,EAApB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAekB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3B,EAAQ0B,EAAajC,IAAI,SAEzBmC,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,uFACxB7B,EADwB,kEAINF,EAAAA,EAAAA,IAAmBE,GAJb,OAIvBL,EAJuB,OAK7B6B,EAAU7B,GALmB,2CAM5B,CAACK,IAUJ,OAJA8B,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,EAAY5B,KAGd,iBAAKS,UAAWC,EAAhB,WACE,kBAAMqB,SAVW,SAAAC,GACnBA,EAAQC,iBACRN,EAAgB,CAAE3B,MAAOD,GAC1B,EAOG,WACE,kBACEmC,KAAK,OACLC,YAAY,gCACZC,SAAU,SAAAJ,GAAO,OAAIT,EAAeS,EAAQK,OAAOC,MAAlC,EACjB7B,UAAWC,KAEb,mBAAQwB,KAAK,SAASzB,UAAWC,EAAjC,wBAIF,SAACL,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["Api/Api.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '2797e847effb3f024c7d83afab7f550f';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day', {\n    params: { api_key },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { api_key, query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: { api_key },\n  });\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"link__movies\":\"MoviesList_link__movies__2gwB0\",\"link\":\"MoviesList_link__8rTGX\",\"description\":\"MoviesList_description__hLHkH\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\nimport image from 'images/notFound.jpeg';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies &&\n        movies.map(({ id, name, title, poster_path }) => (\n          <li key={id} className={css.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ location }}\n              className={css.link__movies}\n            >\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                  width=\"300\"\n                  height=\"400\"\n                />\n              ) : (\n                <img src={image} alt={name} width=\"300\" height=\"400\" />\n              )}\n              <span className={css.description}>{name || title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__N3yRL\",\"button\":\"Movies_button__q3Y5z\",\"wrapperTitle\":\"Movies_wrapperTitle__bef+g\"};","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from 'Api/Api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const fetchMovie = useCallback(async () => {\n    if (!query) {\n      return;\n    }\n    const response = await searchMoviesByName(query);\n    setMovies(response);\n  }, [query]);\n\n  const handleSubmit = element => {\n    element.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n  useEffect(() => {\n    fetchMovie();\n  }, [fetchMovie, query]);\n\n  return (\n    <div className={css.wrapperTitle}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your query here, please\"\n          onChange={element => setSearchQuery(element.target.value)}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["api_key","movieApi","axios","baseURL","moviesFetch","get","params","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","MoviesList","movies","location","useLocation","className","css","map","name","title","poster_path","to","state","src","alt","width","height","image","useState","setSearchQuery","setMovies","useSearchParams","searchParams","setSearchParams","fetchMovie","useCallback","useEffect","onSubmit","element","preventDefault","type","placeholder","onChange","target","value"],"sourceRoot":""}